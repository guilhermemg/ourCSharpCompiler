grammar org.xtext.ourcs.OurCS with org.eclipse.xtext.common.Terminals

generate ourCS "http://www.xtext.org/ourcs/OurCS"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Model:
	greetings+=Greeting*;
	
Greeting:
	'Hello' name=ID '!';

	
	/**
terminal PROFILE:
   ((CHAR|DIGIT)(CHAR|DIGIT)'.'(CHAR|DIGIT)(CHAR|DIGIT))
;
terminal DIGIT:
    ('0'..'9')*
;
*/

/* LEXICAL GRAMMAR A.1 ---------------------------------------------------*/
terminal INPUT:
	INPUT_SECTION_PART;

terminal INPUT_SECTION_PART:
	INPUT_ELEMENT* NEW_LINE_CHARACTER;
	// | PP_DIRECTIVE;
terminal INPUT_ELEMENT:
	WHITESPACE | COMMENT | TOKEN;

terminal CHAR returns ecore::EString:
	('a'..'z' | 'A'..'Z');

/* LINE TERMINATORS A.1.1 ------------------------------------------------*/
terminal NEW_LINE_CHARACTER:
	'\\\\n'
	/*('U000D) | // Carriage return character
    ('U' 000A) | // Line feed character 
    ('U'0085) | // Next line character
    ('U'+2028) | // Line separator character 
    ('U'+2029); // Paragraph separator character */;

/* WHITESPACE A.1.2 --------------------------------------------------------- */
terminal WHITESPACE:
	WS;

/* COMMENTS A.1.3 -------------------------------------------------------- */
terminal SINGLE_LINE_COMMENT:
	"//" CHAR*;

terminal COMMENT:
	SINGLE_LINE_COMMENT | DELIMITED_COMMENT;

terminal INPUT_CHARACTER:
	CHAR;

terminal DELIMITED_COMMENT:
	"/*" DELIMITED_COMMENT_SECTION* "*"+ "/";

terminal DELIMITED_COMMENT_SECTION:
	NOT_ASTERISK "*"+ NOT_SLASH;

terminal NOT_ASTERISK:
	CHAR !('*');

terminal NOT_SLASH:
	CHAR !('/');

/* TOKEN ----------------------------------------------------------------- */
terminal TOKEN:
	ID | KEYWORD | INTEGER_LITERAL |
	REAL_LITERAL |
	CHARACTER_LITERAL |
	STRING_LITERAL |
	OPERATOR_OR_PUNCTUATOR;

terminal INTEGER_LITERAL:
	INT;

terminal REAL_LITERAL:
	INT '.' INT;

terminal CHARACTER_LITERAL:
	CHAR;

terminal STRING_LITERAL: CHAR*;
	//'"' REGULAR_STRING_CHARACTER* '"' |
	//'@"' VERBATIM_STRING_CHARACTER* '"';

/*IDENTIFIERS A.1.6 --------------------------------------------------------*/
// ==> RULE ID FROM Terminals.xtext

/* KEYWORD A.1.7 ----------------------------------------------------- */
terminal KEYWORD:
	"abstract" |
	"as" |
	"base" |
	"bool" |
	"break" |
	"byte" |
	"case" |
	"catch" |
	"char" |
	"checked" |
	"class" |
	"const" |
	"continue" |
	"decimal" |
	"default" |
	"delegate" |
	"do" |
	"double" |
	"else" |
	"enum" |
	"event" |
	"explicit" |
	"extern" |
	"false" |
	"finally" |
	"fixed" |
	"float" |
	"for" |
	"foreach" |
	"goto" |
	"if" |
	"implicit" |
	"in" |
	"int" |
	"interface" |
	"internal" |
	"is" |
	"lock" |
	"long" |
	"namespace" |
	"new" |
	"null" |
	"object" |
	"operator" |
	"out" |
	"override" |
	"params" |
	"private" |
	"protected" |
	"public" |
	"readonly" |
	"ref" |
	"return" |
	"sbyte" |
	"sealed" |
	"short" |
	"sizeof" |
	"stackalloc" |
	"static" |
	"string" |
	"struct" |
	"switch" |
	"this" |
	"throw" |
	"true" |
	"try" |
	"typeof" |
	"uint" |
	"ulong" |
	"unchecked" |
	"unsafe" |
	"ushort" |
	"using" |
	"virtual" |
	"void" |
	"volatile" |
	"while";

/* LITERALS A.1.8 ---------------------------------------------------- */

/* OPERATOR AND PUNCTUATOR A.1.9 -------------------------------------- */
terminal OPERATOR_OR_PUNCTUATOR:
	"{" | "}" | "[" | "]" | "(" | ")" | "." | "," | ":" | ";" | "+" | "-" | "*" | "/" | "%" | "&" | "|" | "^" | "!" | "~"
	| "=" | "<" | ">" | "?" | "++" | "--" | "&&" | "||" | "<<" | ">>" | "==" | "!=" | "<=" | ">=" | "+=" | "-=" | "*=" |
	"/=" | "%=" | "&=" | "|=" | "^=" | "<<=" | ">>=" | "->";

/* PRE-PROCESSING DIRECTIVES A.1.10 ----------------------------------------------- */
	